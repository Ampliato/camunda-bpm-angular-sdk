"use strict";function CamundaApi(e,r){this.$http=e,this.configuration=r,r.engine||(r.engine="default"),r.baseUrl=r.apiUri,"/"!==r.baseUrl.slice(-1)&&(r.baseUrl+="/"),r.baseUrl=r.baseUrl+"engine/"+r.engine}function CamundaApiResource(e,r){this.camundaApi=e,this.resourceName=r}function isJSON(e){try{return JSON.parse(e),!0}catch(r){return!1}}angular.module("camBpmSdk",["camApi"]),angular.module("camApi",[]).provider("camApi",function(){var e={apiUri:"engine-rest"};this.setApiConfiguration=function(r){e=r},this.$get=["$http",function(r){var t=angular.copy(e);return new CamundaApi(r,t)}]}),angular.forEach(["post","get","put","delete"],function(e){CamundaApi.prototype[e]=function(r,t){return"string"!=typeof r&&(!t&&r&&(t=r),r="/"),"/"!==r.slice(0,1)&&(r="/"+r),t||(t={}),t.method=e.toUpperCase(),t.url=this.configuration.baseUrl+r,t.headers||(t.headers={}),t.headers.Accept||(t.headers.Accept="application/hal+json, application/json"),this.$http(t)}}),CamundaApi.prototype.resource=function(e){return new CamundaApiResource(this,e)},angular.forEach(["post","get","put","delete"],function(e){CamundaApiResource.prototype[e]=function(r,t){return"string"!=typeof r&&(!t&&r&&(t=r),r="/"),"/"!==r.slice(0,1)&&(r="/"+r),r="/"+this.resourceName+r,this.camundaApi[e](r,t)}}),CamundaApiResource.prototype.list=function(e){return this.get("",{params:e})},angular.module("camAuth",[]).provider("camAuth",function(){}),angular.module("camForm",["camApi"]).directive("camForm",function(){return{restrict:"EA",scope:{processDefinition:"=",task:"="},controller:["$scope","$element","$compile","$http","camApi",function(e,r,t,n,i){function a(){e.formScope=e.$new(),e.formScope.formVariables={};var r,t=(e.formKey||"").split("embedded:"),i=e.formContextPath||"";t.length>1?(r=t.pop(),i+="/"!==i.slice(-1)?"/":"",r=r.replace(/app:(\/?)/,i)):r=e.formKey,o(function(){if(r)e.$emit("camForm.loadingForm"),n.get(r).success(function(r){c(r),e.$emit("camForm.formLoaded",r)}).error(function(r,t){e.$emit("camForm.formLoadFailed",r,t)});else{e.formScope.genericVariables=[];var t="<cam-generic-form></cam-generic-form>";c(t),e.$emit("camForm.genericFormInitialized")}})}function o(r){e.$emit("camForm.loadingVariables"),i.resource(e.resource).get(e.resourceId+"/form-variables").success(function(t,n){e.$emit("camForm.variablesLoaded",t),e.formScope.formVariables=m(t),r&&r(t,n)}).error(function(t,n){if(e.$emit("camForm.variablesLoadFailed",t,n),!r)throw error;r(t,n)})}function c(r){u.html("<div>"+r+"</div>"),t(angular.element(u.children()[0]).contents())(e.formScope)}function s(e){var r=angular.copy(e);for(var t in r){var n=r[t];if(n.value instanceof Object){var i={type:n.type,object:n.value};n.value=JSON.stringify(i),n.type="String"}}return r}function m(e){var r=angular.copy(e);for(var t in r){var n=r[t];if("String"===n.type&&n.value&&isJSON(n.value)){var i=JSON.parse(n.value);n.value=i.object,n.type=i.type}}return r}var u=angular.element(r.children()[0]);e.$watch("processDefinition",function(){e.processDefinition&&(e.resource="process-definition",e.resourceId=e.processDefinition.id,i.resource("process-definition").get(e.resourceId+"/startForm").success(function(r){r.key&&(e.formKey=r.key,e.formContextPath=r.contextPath,a())}))}),e.$watch("task",function(){e.task&&(e.resource="task",e.resourceId=e.task.id,e.formKey=e.task.formKey,i.resource("task").get(e.resourceId+"/form",{headers:{Accept:"*"}}).success(function(r){e.task._embedded||(e.task._embedded={}),e.task._embedded.form=r,e.formContextPath=r.contextPath,a()}))}),e.submitForm=function(r,t){if("function"==typeof r&&(t=r,r=null),!e.variablesForm.$valid)return void e.$emit("camForm.invalidForm",e.variablesForm);var n={id:e.resourceId,key:r,variables:s(e.formScope.formVariables)};e.$emit("camForm.submittingForm",n),i.resource(e.resource).post(n.id+"/submit-form",{data:{businessKey:n.key,variables:n.variables}}).success(function(r,n){e.$emit("camForm.formSubmitted",r),t&&t(r,n)}).error(function(r,n){if(e.$emit("camForm.formSubmitFailed",n),!t)throw error;t(r,n)})}}],templateUrl:"directives/camForm/camForm.html"}}).directive("camVariableName",["$compile",function(e){return{restrict:"A",scope:!1,require:["^camForm"],terminal:!0,priority:1e3,link:function(r,t,n){var i=n.camVariableName,a=n.camVariableType,o=n.ngModel;r.formVariables[i]||(r.formVariables[i]={name:i,type:a||"String"});var c="formVariables['"+i+"'].value";o&&o===c||t.attr("ng-model",c),t.removeAttr("cam-variable-name"),t.removeAttr("cam-variable-type"),e(t)(r)}}}]).provider("camGenericFormConfiguration",function(){var e={typeInputs:{},properties:{}};this.registerTypeInput=function(r,t){e.typeInputs[r]=t},this.setProperty=function(r,t){e.properties[r]=t},this.$get=[function(){return angular.copy(e)}],this.registerTypeInput("String","<input type='text' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Integer","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Long","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Double","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Boolean","<input type='checkbox' ng-model='variable.value'>"),this.registerTypeInput("Date","<input type='datetime-local' ng-model='variable.value'>"),this.setProperty("formTitle","Generic Form"),this.setProperty("addVariableLabel","Add variable"),this.setProperty("submitFormLabel","Submit generic form")}).directive("camGenericForm",function(){return{restrict:"AE",scope:!0,require:["^camForm"],controller:["$scope","$element","camGenericFormConfiguration",function(e,r,t){e.configuration=t,e.getTypeInput=function(r){var t=e.configuration.typeInputs[r];return t||(t=e.configuration.typeInputs.String),t}}],link:function(e){e.genericVariables=[],e.$watch("formVariables",function(){e.genericVariables=[];for(var r in e.formVariables){var t=e.formVariables[r];e.genericVariables.push({name:r,value:t.value,type:t.type})}}),e.addVariable=function(){e.genericVariables.push({name:"",value:"",type:"String"})},e.removeVariable=function(r){e.genericVariables.splice(r,1)},e.submitGenericForm=function(){for(var r in e.genericVariables){var t=e.genericVariables[r];r&&(e.formVariables[t.name]?(e.formVariables[t.name].value=t.value,e.formVariables[t.name].type=t.type):e.formVariables[t.name]=t)}e.submitForm()}},templateUrl:"directives/camForm/camGenericForm.html"}}).directive("camGenericFormInput",["$compile",function(e){return{restrict:"AE",scope:!1,link:function(r,t,n){r.$watch(function(){return n.htmlSource},function(n){t.html(n),e(t.contents())(r)})}}}]),angular.module("camBpmSdk").run(["$templateCache",function(e){e.put("directives/camForm/camForm.html",'<div ng-form="variablesForm" class="cam-form-container"></div>\n'),e.put("directives/camForm/camGenericForm.html",'<h3>{{configuration.properties[\'formTitle\']}}</h3>\n<div ng-repeat="variable in genericVariables" class="row form-group">\n	<div class="col-md-6">\n		<div class="input-group">\n			<div class="input-group-addon">\n				<span style="cursor: pointer" class="glyphicon glyphicon-minus-sign" ng-click="removeVariable($index)"></span>\n			</div>\n			<input type="text" ng-model="variable.name" class="form-control" placeholder="Variable name">\n			<div class="input-group-addon">\n				<select\n					ng-model="variable.type"\n					ng-options="type as type for (type, input) in configuration.typeInputs">\n				</select>\n			</div>\n		</div>\n	</div>\n	<div class="col-md-6">\n		<cam-generic-form-input html-source="{{getTypeInput(variable.type)}}"></cam-generic-form-input>\n	</div>\n</div>\n<button\n	type="button"\n	class="btn btn-default"\n	ng-click="addVariable()"\n	ng-bind="configuration.properties[\'addVariableLabel\']">\n</button>\n<button\n	type="button"\n	class="btn btn-default"\n	ng-click="submitGenericForm()"\n	ng-bind="configuration.properties[\'submitFormLabel\']">\n</button>\n')}]);
