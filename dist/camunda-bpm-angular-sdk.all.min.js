"use strict";angular.module("camBpmSdk",[]).value("HttpClient",CamSDK.Client).value("CamForm",CamSDK.Form).value("MockHttpClient",CamSDKMocks).factory("camApiHttpClient",["MockHttpClient","$rootScope",function(e,t){function r(t){var r=t.mock===!0?e:CamSDK.Client.HttpClient;this._wrapped=new r(t)}return angular.forEach(["post","get","load","put","del"],function(e){r.prototype[e]=function(r,n){if(n.done){var i=n.done;n.done=function(e,r){t.$apply(function(){i(e,r)})},this._wrapped[e](r,n)}}}),angular.forEach(["on","once","off","trigger"],function(e){r.prototype[e]=function(){this._wrapped[e].apply(this,arguments)}}),r}]).provider("camApi",function(){var e={apiUri:"engine-rest/engine"};this.setApiConfiguration=function(t){e=t},this.$get=["camApiHttpClient",function(t){var r=angular.copy(e);return r.HttpClient=t,new CamSDK.Client(r)}]}),angular.module("camForm",["camBpmSdk"]).directive("camForm",function(){return{restrict:"EA",scope:{processDefinition:"=",task:"="},controller:["$scope","$element","$compile","camApi",function(e,t,r,n){function i(){e.formScope=e.$new(),e.formScope.formVariables={},e.formScope.variables={};var t,r=(e.formKey||"").split("embedded:"),i=e.formContextPath||"";if(r.length>1?(t=r.pop(),i+="/"!==i.slice(-1)?"/":"",t=t.replace(/app:(\/?)/,i)):t=e.formKey,a(),t)n.http.load(t,{done:function(e,t){if(e)throw e;o(t)}});else{e.formScope.genericVariables=[];var c="<cam-generic-form></cam-generic-form>";o(c)}}function a(){n.http.get(e.resource+"/"+e.resourceId+"/form-variables",{done:function(t,r){if(t)throw t;e.formScope.formVariables=r;for(var n in r){var i=r[n];e.formScope.variables[i.name]=i.value}}})}function o(t){c.html("<div>"+t+"</div>"),r(angular.element(c.children()[0]).contents())(e.formScope)}var c=angular.element(t.children()[0]);e.submitForm=function(t){var r={id:e.resourceId,variables:e.formScope.formVariables};n.resource(e.resource).submitForm(r,function(e,r){if(e){if(!t)throw e;t(e,r)}t&&t(e,r)})},e.$watch("processDefinition",function(){e.processDefinition&&(e.resource="process-definition",e.resourceId=e.processDefinition.id,n.resource(e.resource).startForm({id:e.processDefinition.id},function(t,r){if(t)throw t;r.key&&(e.formKey=r.key,e.formContextPath=r.contextPath,i())}))}),e.$watch("task",function(){e.task&&(e.resource="task",e.resourceId=e.task.id,e.formKey=e.task.formKey,n.http.get("task/"+e.task.id+"/form",{done:function(t,r){if(t)throw t;e.task._embedded||(e.task._embedded={}),e.task._embedded.form=r,e.formContextPath=r.contextPath,i()}}))})}],link:function(){},templateUrl:"directives/camForm/camForm.html"}}).directive("camVariableName",function(){return{restrict:"A",scope:!1,require:["ngModel","^camForm"],controller:function(){},link:function(e,t,r,n){var i=n[0];e.$watch(function(){return i.$modelValue},function(){e.formVariables[r.camVariableName]?e.formVariables[r.camVariableName].value=i.$modelValue:e.formVariables[r.camVariableName]={value:i.$modelValue,type:r.camVariableType}})}}}).provider("camGenericFormConfiguration",function(){var e={};this.registerTypeInput=function(t,r){e[t]=r},this.$get=[function(){return{typeInputs:angular.copy(e)}}],this.registerTypeInput("String","<input type='text' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Integer","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Long","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Double","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Boolean","<input type='checkbox' ng-model='variable.value'>"),this.registerTypeInput("Date","<input type='date' ng-model='variable.value'>")}).directive("camGenericForm",function(){return{restrict:"AE",scope:!0,require:["^camForm"],controller:["$scope","$element","camGenericFormConfiguration",function(e,t,r){e.configuration=r,e.getTypeInput=function(t){var r=e.configuration.typeInputs[t];return r||(r=e.configuration.typeInputs.String),r}}],link:function(e){e.genericVariables=[],e.$watch("formVariables",function(){e.genericVariables=[];for(var t in e.formVariables){var r=e.formVariables[t];e.genericVariables.push({name:t,value:r.value,type:r.type})}}),e.addVariable=function(){e.genericVariables.push({name:"",value:"",type:"String"})},e.submitGenericForm=function(){for(var t in e.genericVariables){var r=e.genericVariables[t];t&&(e.formVariables[r.name]?(e.formVariables[r.name].value=r.value,e.formVariables[r.name].type=r.type):e.formVariables[r.name]=r)}e.submitForm()}},templateUrl:"directives/camForm/camGenericForm.html"}}).directive("camGenericFormInput",["$compile",function(e){return{restrict:"AE",scope:!1,link:function(t,r,n){t.$watch(function(){return n.htmlSource},function(n){r.html(n),e(r.contents())(t)})}}}]),angular.module("camBpmSdk").run(["$templateCache",function(e){e.put("directives/camForm/camForm.html",'<div ng-form="variablesForm" class="cam-form-container"></div>\n'),e.put("directives/camForm/camGenericForm.html",'<h3>Variables</h3>\n<div ng-repeat="variable in genericVariables" class="row form-group">\n	<div class="col-md-6">\n		<div class="input-group">\n			<input type="text" ng-model="variable.name" class="form-control" placeholder="Variable Name">\n			<div class="input-group-addon">\n				<select\n					ng-model="variable.type"\n					ng-options="type as type for (type, input) in configuration.typeInputs">\n				</select>\n			</div>\n		</div>\n	</div>\n	<div class="col-md-6">\n		<cam-generic-form-input html-source="{{getTypeInput(variable.type)}}"></cam-generic-form-input>\n	</div>\n</div>\n<button type="button" class="btn btn-default" ng-click="addVariable()">Add Variable</button>\n<button type="button" class="btn btn-default" ng-click="submitGenericForm()">Submit Form</button>\n')}]);