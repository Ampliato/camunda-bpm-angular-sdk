"use strict";angular.module("camBpmSdk",[]).value("HttpClient",CamSDK.Client).value("CamForm",CamSDK.Form).value("MockHttpClient",CamSDKMocks).factory("camApiHttpClient",["MockHttpClient","$rootScope",function(e,t){function o(t){var o=t.mock===!0?e:CamSDK.Client.HttpClient;this._wrapped=new o(t)}return angular.forEach(["post","get","load","put","del"],function(e){o.prototype[e]=function(o,r){if(r.done){var n=r.done;r.done=function(e,o){t.$apply(function(){n(e,o)})},this._wrapped[e](o,r)}}}),angular.forEach(["on","once","off","trigger"],function(e){o.prototype[e]=function(){this._wrapped[e].apply(this,arguments)}}),o}]).provider("camApi",function(){var e={apiUri:"engine-rest/engine"};this.setApiConfiguration=function(t){e=t},this.$get=["camApiHttpClient",function(t){var o=angular.copy(e);return o.HttpClient=t,new CamSDK.Client(o)}]}),angular.module("camForm",["camBpmSdk"]).directive("camForm",function(){return{restrict:"EA",scope:{processDefinition:"=",task:"="},controller:["$scope","$element","$compile","camApi",function(e,t,o,r){function n(){e.formScope=e.$new();var t,o=(e.formKey||"").split("embedded:"),n=e.formContextPath||"";if(o.length>1?(t=o.pop(),n+="/"!==n.slice(-1)?"/":"",t=t.replace(/app:(\/?)/,n)):t=e.formKey,i(),!t)throw"ErRor";r.http.load(t,{done:function(e,t){if(e)throw e;a(t)}})}function i(){e.formScope.variables={},r.http.get(e.resource+"/"+e.resourceId+"/form-variables",{done:function(t,o){if(t)throw t;console.log(o);for(var r in o){var n=o[r];e.formScope.variables[n.name]=n.value}}})}function a(t){c.html("<div>"+t+"</div>"),o(angular.element(c.children()[0]).contents())(e.formScope)}var c=angular.element(t.children()[0]);e.formVariables={},this.setFormVariable=function(t,o,r){e.formVariables[t]={value:o,type:r}},this.getFormVariable=function(t){return e.formVariables[t]},e.submitForm=function(t){var o={id:e.resourceId};o.variables=e.formVariables,r.resource(e.resource).submitForm(o,function(e,o){if(e){if(!t)throw e;t(e,o)}t&&t(e,o)})},e.$watch("processDefinition",function(){e.processDefinition&&(e.resource="process-definition",e.resourceId=e.processDefinition.id,r.resource(e.resource).startForm({id:e.processDefinition.id},function(t,o){if(t)throw t;o.key&&(e.formKey=o.key,e.formContextPath=o.contextPath,n())}))}),e.$watch("task",function(){e.task&&(e.resource="task",e.resourceId=e.task.id,e.formKey=e.task.formKey,r.http.get("task/"+e.task.id+"/form",{done:function(t,o){if(t)throw t;e.task._embedded||(e.task._embedded={}),e.task._embedded.form=o,e.formContextPath=o.contextPath,n()}}))})}],link:function(){},templateUrl:"directives/camForm/camForm.html"}}).directive("camVariableName",function(){return{restrict:"A",scope:{variableName:"@camVariableName",variableType:"@camVariableType",model:"=ngModel"},require:["ngModel","^camForm"],controller:function(){},link:function(e,t,o,r){var n=r[0],i=r[1];e.$watch(function(){return n.$modelValue},function(){i.setFormVariable(e.variableName,n.$modelValue,e.variableType)})}}}),angular.module("camBpmSdk").run(["$templateCache",function(e){e.put("directives/camForm/camForm.html",'<div ng-form="variablesForm" class="cam-form-container"></div>\n')}]);