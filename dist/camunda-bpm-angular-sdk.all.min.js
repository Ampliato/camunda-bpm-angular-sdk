"use strict";angular.module("camBpmSdk",[]).value("HttpClient",CamSDK.Client).value("CamForm",CamSDK.Form).value("MockHttpClient",CamSDKMocks).factory("camApiHttpClient",["MockHttpClient","$rootScope",function(e,r){function t(r){var t=r.mock===!0?e:CamSDK.Client.HttpClient;this._wrapped=new t(r)}return angular.forEach(["post","get","load","put","del"],function(e){t.prototype[e]=function(t,n){if(n.done){var o=n.done;n.done=function(e,t){r.$apply(function(){o(e,t)})},this._wrapped[e](t,n)}}}),angular.forEach(["on","once","off","trigger"],function(e){t.prototype[e]=function(){this._wrapped[e].apply(this,arguments)}}),t}]).provider("camApi",function(){var e={apiUri:"engine-rest/engine"};this.setApiConfiguration=function(r){e=r},this.$get=["camApiHttpClient",function(r){var t=angular.copy(e);return t.HttpClient=r,new CamSDK.Client(t)}]}),angular.module("camForm",["camBpmSdk"]).directive("camForm",function(){return{restrict:"EA",scope:{processDefinition:"=",task:"="},controller:["$scope","$element","$compile","camApi",function(e,r,t,n){function o(){e.formScope=e.$new(),e.formScope.formVariables={},e.formScope.variables={};var r,t=(e.formKey||"").split("embedded:"),o=e.formContextPath||"";if(t.length>1?(r=t.pop(),o+="/"!==o.slice(-1)?"/":"",r=r.replace(/app:(\/?)/,o)):r=e.formKey,i(),r)n.http.load(r,{done:function(e,r){if(e)throw e;a(r)}});else{e.formScope.genericVariables=[];var c="<cam-generic-form></cam-generic-form>";a(c)}}function i(){n.http.get(e.resource+"/"+e.resourceId+"/form-variables",{done:function(r,t){if(r)throw r;e.formScope.formVariables=t;for(var n in t){var o=t[n];e.formScope.variables[o.name]=o.value}}})}function a(r){c.html("<div>"+r+"</div>"),t(angular.element(c.children()[0]).contents())(e.formScope)}var c=angular.element(r.children()[0]);e.submitForm=function(r){var t={id:e.resourceId,variables:e.formScope.formVariables};n.resource(e.resource).submitForm(t,function(e,t){if(e){if(!r)throw e;r(e,t)}r&&r(e,t)})},e.$watch("processDefinition",function(){e.processDefinition&&(e.resource="process-definition",e.resourceId=e.processDefinition.id,n.resource(e.resource).startForm({id:e.processDefinition.id},function(r,t){if(r)throw r;t.key&&(e.formKey=t.key,e.formContextPath=t.contextPath,o())}))}),e.$watch("task",function(){e.task&&(e.resource="task",e.resourceId=e.task.id,e.formKey=e.task.formKey,n.http.get("task/"+e.task.id+"/form",{done:function(r,t){if(r)throw r;e.task._embedded||(e.task._embedded={}),e.task._embedded.form=t,e.formContextPath=t.contextPath,o()}}))})}],link:function(){},templateUrl:"directives/camForm/camForm.html"}}).directive("camVariableName",function(){return{restrict:"A",scope:!1,require:["ngModel","^camForm"],controller:function(){},link:function(e,r,t,n){var o=n[0];e.$watch(function(){return o.$modelValue},function(){e.formVariables[t.camVariableName]?e.formVariables[t.camVariableName].value=o.$modelValue:e.formVariables[t.camVariableName]={value:o.$modelValue,type:t.camVariableType}})}}}).provider("camGenericFormConfiguration",function(){var e={};this.registerTypeInput=function(r,t){e[r]=t},this.$get=[function(){return{typeInputs:angular.copy(e)}}],this.registerTypeInput("Default","<input type='text' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("String","<input type='text' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Integer","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Boolean","<input type='checkbox' ng-model='variable.value'>")}).directive("camGenericForm",function(){return{restrict:"AE",scope:!0,require:["^camForm"],controller:["$scope","$element","camGenericFormConfiguration",function(e,r,t){e.configuration=t,e.getTypeInput=function(r){var t=e.configuration.typeInputs[r];return t||(t=e.configuration.typeInputs.Default),t}}],link:function(e){e.genericVariables=[],e.$watch("formVariables",function(){e.genericVariables=[];for(var r in e.formVariables){var t=e.formVariables[r];e.genericVariables.push({name:r,value:t.value,type:t.type})}}),e.submitGenericForm=function(){for(var r in e.genericVariables){var t=e.genericVariables[r];e.formVariables[t.name]?(e.formVariables[t.name].value=t.value,e.formVariables[t.name].type=t.type):e.formVariables[t.name]=t}e.submitForm()}},templateUrl:"directives/camForm/camGenericForm.html"}}).directive("camGenericFormInput",["$compile",function(e){return{restrict:"AE",scope:!1,link:function(r,t,n){r.$watch(function(){return n.htmlSource},function(n){t.html(n),e(t.contents())(r)})}}}]),angular.module("camBpmSdk").run(["$templateCache",function(e){e.put("directives/camForm/camForm.html",'<div ng-form="variablesForm" class="cam-form-container"></div>\n'),e.put("directives/camForm/camGenericForm.html",'<h3>Variables</h3>\n<div ng-repeat="variable in genericVariables" class="row form-group">\n	<div class="col-md-6">\n		<input type="text" ng-model="variable.name" class="form-control" placeholder="Name">\n	</div>\n	<div class="col-md-6">\n		<cam-generic-form-input html-source="{{getTypeInput(variable.type)}}"></cam-generic-form-input>\n	</div>\n</div>\n<button type="button" class="btn btn-default" ng-click="submitGenericForm()">Submit Form</button>\n')}]);