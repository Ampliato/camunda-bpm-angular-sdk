"use strict";angular.module("camBpmSdk",[]).value("HttpClient",CamSDK.Client).value("CamForm",CamSDK.Form).value("MockHttpClient",CamSDKMocks).factory("camApiHttpClient",["MockHttpClient","$rootScope",function(e,r){function n(r){var n=r.mock===!0?e:CamSDK.Client.HttpClient;this._wrapped=new n(r)}return angular.forEach(["post","get","load","put","del"],function(e){n.prototype[e]=function(n,t){if(t.done){var i=t.done;t.done=function(e,n){r.$apply(function(){i(e,n)})},this._wrapped[e](n,t)}}}),angular.forEach(["on","once","off","trigger"],function(e){n.prototype[e]=function(){this._wrapped[e].apply(this,arguments)}}),n}]).provider("camApi",function(){var e={apiUri:"engine-rest/engine"};this.setApiConfiguration=function(r){e=r},this.$get=["camApiHttpClient",function(r){var n=angular.copy(e);return n.HttpClient=r,new CamSDK.Client(n)}]}),angular.module("camForm",["camBpmSdk"]).directive("camForm",function(){return{restrict:"EA",scope:{processDefinition:"=",task:"="},controller:["$scope","$element","$compile","camApi",function(e,r,n,t){function i(){e.formScope=e.$new(),e.formScope.formVariables={},e.formScope.variables={};var r,n=(e.formKey||"").split("embedded:"),i=e.formContextPath||"";if(n.length>1?(r=n.pop(),i+="/"!==i.slice(-1)?"/":"",r=r.replace(/app:(\/?)/,i)):r=e.formKey,o(),r)t.http.load(r,{done:function(e,r){if(e)throw e;a(r)}});else{e.formScope.genericVariables=[];var c="<cam-generic-form></cam-generic-form>";a(c)}}function o(){t.http.get(e.resource+"/"+e.resourceId+"/form-variables",{done:function(r,n){if(r)throw r;e.formScope.formVariables=n;for(var t in n){var i=n[t];e.formScope.variables[i.name]=i.value}}})}function a(r){c.html("<div>"+r+"</div>"),n(angular.element(c.children()[0]).contents())(e.formScope)}var c=angular.element(r.children()[0]);e.submitForm=function(r){var n={id:e.resourceId,variables:e.formScope.formVariables};t.resource(e.resource).submitForm(n,function(e,n){if(e){if(!r)throw e;r(e,n)}r&&r(e,n)})},e.$watch("processDefinition",function(){e.processDefinition&&(e.resource="process-definition",e.resourceId=e.processDefinition.id,t.resource(e.resource).startForm({id:e.processDefinition.id},function(r,n){if(r)throw r;n.key&&(e.formKey=n.key,e.formContextPath=n.contextPath,i())}))}),e.$watch("task",function(){e.task&&(e.resource="task",e.resourceId=e.task.id,e.formKey=e.task.formKey,t.http.get("task/"+e.task.id+"/form",{done:function(r,n){if(r)throw r;e.task._embedded||(e.task._embedded={}),e.task._embedded.form=n,e.formContextPath=n.contextPath,i()}}))})}],link:function(){},templateUrl:"directives/camForm/camForm.html"}}).directive("camVariableName",function(){return{restrict:"A",scope:!1,require:["ngModel","^camForm"],controller:function(){},link:function(e,r,n,t){var i=t[0];e.$watch(function(){return i.$modelValue},function(){e.formVariables[n.camVariableName]?e.formVariables[n.camVariableName].value=i.$modelValue:e.formVariables[n.camVariableName]={value:i.$modelValue,type:n.camVariableType}})}}}).provider("camGenericFormConfiguration",function(){var e={typeInputs:{},properties:{}};this.registerTypeInput=function(r,n){e.typeInputs[r]=n},this.setProperty=function(r,n){e.properties[r]=n},this.$get=[function(){return angular.copy(e)}],this.registerTypeInput("String","<input type='text' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Integer","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Long","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Double","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Boolean","<input type='checkbox' ng-model='variable.value'>"),this.registerTypeInput("Date","<input type='date' ng-model='variable.value'>"),this.setProperty("formTitle","Generic Form"),this.setProperty("addVariableLabel","Add variable"),this.setProperty("submitFormLabel","Submit generic form")}).directive("camGenericForm",function(){return{restrict:"AE",scope:!0,require:["^camForm"],controller:["$scope","$element","camGenericFormConfiguration",function(e,r,n){e.configuration=n,e.getTypeInput=function(r){var n=e.configuration.typeInputs[r];return n||(n=e.configuration.typeInputs.String),n}}],link:function(e){e.genericVariables=[],e.$watch("formVariables",function(){e.genericVariables=[];for(var r in e.formVariables){var n=e.formVariables[r];e.genericVariables.push({name:r,value:n.value,type:n.type})}}),e.addVariable=function(){e.genericVariables.push({name:"",value:"",type:"String"})},e.removeVariable=function(r){e.genericVariables.splice(r,1)},e.submitGenericForm=function(){for(var r in e.genericVariables){var n=e.genericVariables[r];r&&(e.formVariables[n.name]?(e.formVariables[n.name].value=n.value,e.formVariables[n.name].type=n.type):e.formVariables[n.name]=n)}e.submitForm()}},templateUrl:"directives/camForm/camGenericForm.html"}}).directive("camGenericFormInput",["$compile",function(e){return{restrict:"AE",scope:!1,link:function(r,n,t){r.$watch(function(){return t.htmlSource},function(t){n.html(t),e(n.contents())(r)})}}}]),angular.module("camBpmSdk").run(["$templateCache",function(e){e.put("directives/camForm/camForm.html",'<div ng-form="variablesForm" class="cam-form-container"></div>\n'),e.put("directives/camForm/camGenericForm.html",'<h3>{{configuration.properties[\'formTitle\']}}}</h3>\n<div ng-repeat="variable in genericVariables" class="row form-group">\n	<div class="col-md-6">\n		<div class="input-group">\n			<div class="input-group-addon">\n				<span style="cursor: pointer" class="glyphicon glyphicon-minus-sign" ng-click="removeVariable($index)"></span>\n			</div>\n			<input type="text" ng-model="variable.name" class="form-control" placeholder="Variable name">\n			<div class="input-group-addon">\n				<select\n					ng-model="variable.type"\n					ng-options="type as type for (type, input) in configuration.typeInputs">\n				</select>\n			</div>\n		</div>\n	</div>\n	<div class="col-md-6">\n		<cam-generic-form-input html-source="{{getTypeInput(variable.type)}}"></cam-generic-form-input>\n	</div>\n</div>\n<button\n	type="button"\n	class="btn btn-default"\n	ng-click="addVariable()"\n	ng-bind="configuration.properties[\'addVariableLabel\']">\n</button>\n<button\n	type="button"\n	class="btn btn-default"\n	ng-click="submitGenericForm()"\n	ng-bind="configuration.properties[\'submitFormLabel\']">\n</button>\n')}]);