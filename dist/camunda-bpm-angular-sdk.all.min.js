"use strict";function isJSON(e){try{return JSON.parse(e),!0}catch(t){return!1}}angular.module("camBpmSdk",[]).value("HttpClient",CamSDK.Client).value("CamForm",CamSDK.Form).value("MockHttpClient",CamSDKMocks).factory("camApiHttpClient",["MockHttpClient","$rootScope",function(e,t){function r(t){var r=t.mock===!0?e:CamSDK.Client.HttpClient;this._wrapped=new r(t)}return angular.forEach(["post","get","load","put","del"],function(e){r.prototype[e]=function(r,n){if(n.done){var i=n.done;n.done=function(e,r){t.$apply(function(){i(e,r)})},this._wrapped[e](r,n)}}}),angular.forEach(["on","once","off","trigger"],function(e){r.prototype[e]=function(){this._wrapped[e].apply(this,arguments)}}),r}]).provider("camApi",function(){var e={apiUri:"engine-rest/engine"};this.setApiConfiguration=function(t){e=t},this.$get=["camApiHttpClient",function(t){var r=angular.copy(e);return r.HttpClient=t,new CamSDK.Client(r)}]}),angular.module("camForm",["camBpmSdk"]).directive("camForm",function(){return{restrict:"EA",scope:{processDefinition:"=",task:"="},controller:["$scope","$element","$compile","camApi",function(e,t,r,n){function i(){e.formScope=e.$new(),e.formScope.formVariables={};var t,r=(e.formKey||"").split("embedded:"),i=e.formContextPath||"";r.length>1?(t=r.pop(),i+="/"!==i.slice(-1)?"/":"",t=t.replace(/app:(\/?)/,i)):t=e.formKey,o(function(){if(t)n.http.load(t,{done:function(e,t){if(e)throw e;a(t)}});else{e.formScope.genericVariables=[];var r="<cam-generic-form></cam-generic-form>";a(r)}})}function o(t){n.http.get(e.resource+"/"+e.resourceId+"/form-variables",{done:function(r,n){if(r){if(!t)throw r;t(r,n)}e.formScope.formVariables=l(n),t&&t(r,n)}})}function a(t){s.html("<div>"+t+"</div>"),r(angular.element(s.children()[0]).contents())(e.formScope)}function c(e){var t=angular.copy(e);for(var r in t){var n=t[r];if(n.value instanceof Object){var i={type:n.type,object:n.value};n.value=JSON.stringify(i),n.type="String"}}return t}function l(e){var t=angular.copy(e);for(var r in t){var n=t[r];if("String"===n.type&&n.value&&isJSON(n.value)){var i=JSON.parse(n.value);n.value=i.object,n.type=i.type}}return t}var s=angular.element(t.children()[0]);e.$watch("processDefinition",function(){e.processDefinition&&(e.resource="process-definition",e.resourceId=e.processDefinition.id,n.resource(e.resource).startForm({id:e.processDefinition.id},function(t,r){if(t)throw t;r.key&&(e.formKey=r.key,e.formContextPath=r.contextPath,i())}))}),e.$watch("task",function(){e.task&&(e.resource="task",e.resourceId=e.task.id,e.formKey=e.task.formKey,n.http.get("task/"+e.task.id+"/form",{done:function(t,r){if(t)throw t;e.task._embedded||(e.task._embedded={}),e.task._embedded.form=r,e.formContextPath=r.contextPath,i()}}))}),e.submitForm=function(t){if(e.variablesForm.$valid){var r={id:e.resourceId,variables:c(e.formScope.formVariables)};n.resource(e.resource).submitForm(r,function(e,r){if(e){if(!t)throw e;t(e,r)}t&&t(e,r)})}}}],link:function(){},templateUrl:"directives/camForm/camForm.html"}}).directive("camVariableName",["$compile",function(){return{restrict:"A",scope:!1,require:["^camForm"],controller:["$scope","$element","$compile",function(e,t,r){var n=t.attr("cam-variable-name"),i=t.attr("cam-variable-type");e.formVariables[n]||(e.formVariables[n]={name:n,type:i||"String"});var o="formVariables['"+n+"'].value",a=t.attr("ng-model");a&&a===o||(t.attr("ng-model",o),r(t)(e))}]}}]).provider("camGenericFormConfiguration",function(){var e={typeInputs:{},properties:{}};this.registerTypeInput=function(t,r){e.typeInputs[t]=r},this.setProperty=function(t,r){e.properties[t]=r},this.$get=[function(){return angular.copy(e)}],this.registerTypeInput("String","<input type='text' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Integer","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Long","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Double","<input type='number' ng-model='variable.value' class='form-control'>"),this.registerTypeInput("Boolean","<input type='checkbox' ng-model='variable.value'>"),this.registerTypeInput("Date","<input type='datetime-local' ng-model='variable.value'>"),this.setProperty("formTitle","Generic Form"),this.setProperty("addVariableLabel","Add variable"),this.setProperty("submitFormLabel","Submit generic form")}).directive("camGenericForm",function(){return{restrict:"AE",scope:!0,require:["^camForm"],controller:["$scope","$element","camGenericFormConfiguration",function(e,t,r){e.configuration=r,e.getTypeInput=function(t){var r=e.configuration.typeInputs[t];return r||(r=e.configuration.typeInputs.String),r}}],link:function(e){e.genericVariables=[],e.$watch("formVariables",function(){e.genericVariables=[];for(var t in e.formVariables){var r=e.formVariables[t];e.genericVariables.push({name:t,value:r.value,type:r.type})}}),e.addVariable=function(){e.genericVariables.push({name:"",value:"",type:"String"})},e.removeVariable=function(t){e.genericVariables.splice(t,1)},e.submitGenericForm=function(){for(var t in e.genericVariables){var r=e.genericVariables[t];t&&(e.formVariables[r.name]?(e.formVariables[r.name].value=r.value,e.formVariables[r.name].type=r.type):e.formVariables[r.name]=r)}e.submitForm()}},templateUrl:"directives/camForm/camGenericForm.html"}}).directive("camGenericFormInput",["$compile",function(e){return{restrict:"AE",scope:!1,link:function(t,r,n){t.$watch(function(){return n.htmlSource},function(n){r.html(n),e(r.contents())(t)})}}}]),angular.module("camBpmSdk").run(["$templateCache",function(e){e.put("directives/camForm/camForm.html",'<div ng-form="variablesForm" class="cam-form-container"></div>\n'),e.put("directives/camForm/camGenericForm.html",'<h3>{{configuration.properties[\'formTitle\']}}</h3>\n<div ng-repeat="variable in genericVariables" class="row form-group">\n	<div class="col-md-6">\n		<div class="input-group">\n			<div class="input-group-addon">\n				<span style="cursor: pointer" class="glyphicon glyphicon-minus-sign" ng-click="removeVariable($index)"></span>\n			</div>\n			<input type="text" ng-model="variable.name" class="form-control" placeholder="Variable name">\n			<div class="input-group-addon">\n				<select\n					ng-model="variable.type"\n					ng-options="type as type for (type, input) in configuration.typeInputs">\n				</select>\n			</div>\n		</div>\n	</div>\n	<div class="col-md-6">\n		<cam-generic-form-input html-source="{{getTypeInput(variable.type)}}"></cam-generic-form-input>\n	</div>\n</div>\n<button\n	type="button"\n	class="btn btn-default"\n	ng-click="addVariable()"\n	ng-bind="configuration.properties[\'addVariableLabel\']">\n</button>\n<button\n	type="button"\n	class="btn btn-default"\n	ng-click="submitGenericForm()"\n	ng-bind="configuration.properties[\'submitFormLabel\']">\n</button>\n')}]);
